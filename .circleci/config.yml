version: 2.1

orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2
  browser-tools: circleci/browser-tools@1.1

jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.1-node
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y sqlite3 libsqlite3-dev
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"

  test:
    parallelism: 3
    docker:
      - image: cimg/ruby:3.0.1-browsers
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD

    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y sqlite3 libsqlite3-dev
      - run: sudo apt-get update && sudo apt-get install libmagickwand-dev && sudo apt-get install imagemagick --fix-missing
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Webpack の実行
          command: bundle exec rails webpacker:compile
      - run:
          name: データベースのセットアップ
          command: bundle exec rails db:setup
      - run:
          name: データベースのセットアップ
          command: bundle exec rails test:all
  
  deploy:
    docker:
      - image: cimg/ruby:3.0.1-node
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run: sudo apt-get update && sudo apt-get install -y sqlite3 libsqlite3-dev
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - add_ssh_keys:  
          fingerprints:  
            - 50:78:50:28:1c:3a:63:e0:6d:ec:e4:d6:ac:e9:fe:d6
      - run:
          name: Capistrano の実行
          command: bundle exec cap production deploy

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

      - test:
          requires:
            - build

      - deploy:
          requires:
            - test
